to do
=====

+ Add info about rate of nonzeros in F and L to progress, and to
  console output when verbose = TRUE.

+ Create an example 100 x 200 data set in the data/ directory, and
  store a (local) solution, as well as the log-likelihood and deviance
  at that solution; build on the betanmf example.

+ Add roxygen2 documentation to "betanmf" function.

+ Add test to verify that multiplicative updates (betanmf) and EM
  updates give the exact same result.

+ In fit_topics, extract row and column names from X and use these for
  L and F.

+ Get some ideas for S3 methods from prcomp, LDA and glmnet:
    methods(class = "prcomp")
    methods(class = "LDA")
    methods(class = "glmnet")

+ Provide option in altsqp to automatically determine number of
  threads in multithreading.

+ Change message about "consider converting X to a sparse matrix" so
  that it is only printed when X is fairly large.

+ Add steps to fix initializations containing zeros that cause
  problems for em, mu and lda algorithms. (And print warning when
  fixing this.)

+ Implement an option to periodically "restart" the extrapolation
  scheme, as in the conjugate gradients method.

+ Add "method" argument to "fit_topics", with possible settings
  "altsqp", "em", "mu" and "lda".

+ Implement a better scheme for normalizing the factors and loadings;
  see "NMF is ill-posed" and Sec. 3.1.7 in the review paper by
  N. Gillis. (One option would be to multiply by a positive, diagonal
  K x K matrix D that ensures some condition is met.)

+ Re-name "altsqp" function to a more generic name such as
  "fit_topics", so that we have functions "fit_topics" and
  "fit_topics_control_default".

+ Add "model" argument to fit_topics, so that it can return the
  parameters for either the Poisson or multinomial topic models.

+ Re-implement fit_topics using "internal" (yet well-documented)
  functions "fit_topics_init" and "fit_topics_update" so that it is
  easy to fit the model with a simple for-loop.

+ Implement additional option model = LDA to return parameters of LDA
  model (in which case the "value" output is actually the ELBO). This
  will be implemented by a separate function "poisson2lda" or
  "multinomial2lda".

+ In altsqp, assess convergence by computing norm of the gradient (try
  L0, L1 and L2 norms).

+ Make the droplet data set smaller so that it can be used in a
  vignette.

+ In altsqp roxygen2 docs, give advice on setting control parameters.

+ Implement a short vignette using the droplet data; compare against
  nnmf and altsqp with numsqp = 0.

+ Set up continuous integration (Travis CI, Appveyor, CircleCI) and
  CodeCov. (Only do this after making the package public.)

+ Fill out "Quick Start" instructions in README.

+ Fill out @details for altsqp.

